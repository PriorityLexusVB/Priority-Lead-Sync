name: CI Admin & Deploy

on:
  workflow_dispatch:        # manual
  push:
    branches: [ main ]      # deploy on push to main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci-admin-deploy:
    runs-on: ubuntu-latest
    environment: codex   # to read FIREBASE_TOKEN if needed

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (optional)
        run: npm ci || true

      - name: Install firebase-admin (for sanity script)
        run: npm i firebase-admin

      - name: Validate service account JSON
        run: |
          node -e "
            const sa = JSON.parse(process.env.GCP_SA_KEY || '{}');
            if(!sa.client_email || !sa.private_key) throw new Error('Missing client_email/private_key');
            console.log('Using SA:', sa.client_email);
            console.log('Private key length:', (sa.private_key||'').length);
          "
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

      - name: Firestore sanity write (DB: leads)
        run: node scripts/run-admin.cjs
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          GOOGLE_CLOUD_PROJECT: priority-lead-sync
          FIRESTORE_DATABASE_ID: leads

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      # Prepare Functions deps so deploy doesn't fail even if lockfile is missing
      - name: Prepare Functions dependencies
        run: |
          if [ -d functions ]; then
            cd functions
            if [ -f package-lock.json ]; then
              npm ci || npm i
            else
              npm i
            fi
            npm ls express >/dev/null 2>&1 || npm i express
            npm ls firebase-functions >/dev/null 2>&1 || npm i firebase-functions
          fi

      # Prefer SA auth; fall back to FIREBASE_TOKEN from env: codex
      - name: Deploy Functions & Hosting (non-interactive)
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          set -e
          if [ -n "$GCP_SA_KEY" ]; then
            echo "$GCP_SA_KEY" > $RUNNER_TEMP/gcp-sa.json
            export GOOGLE_APPLICATION_CREDENTIALS="$RUNNER_TEMP/gcp-sa.json"
            echo "Using Service Account for deploy."
            firebase deploy --only functions,hosting --project priority-lead-sync --non-interactive
          elif [ -n "$FIREBASE_TOKEN" ]; then
            echo "Using FIREBASE_TOKEN for deploy (deprecated by CLI but accepted here)."
            firebase deploy --only functions,hosting --project priority-lead-sync --non-interactive
          else
            echo "No deploy credentials found. Provide GCP_SA_KEY or FIREBASE_TOKEN."
            exit 1
          fi
